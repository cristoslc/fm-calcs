/** 
# sql.whereEquals ( fqFieldToReturn ; fqFieldToMatch ; valueToMatch )
 - Syntactic sugar for performing a basic SQL query of the 
    structure `SELECT <<fieldToReturn's field>> FROM <<fieldToReturn's table>> WHERE <<fieldToMatch>> = <<valueToMatch>>`.


## PARAMETERS
### fqFieldToReturn ( field reference )
 - A FileMaker reference to the field whose value you want returned from the query.
### fqFieldToMatch ( field reference )
 - A FileMaker reference to the field whose value should match `valueToMatch`.
### valueToMatch ( text|number )
 - The value to look for in fqFieldToMatch

## USAGE
```
sql.whereEquals ( Customers::NameFull ; Customers::idCustomer ; $idCustomer )
```
- returns the contents of NameFull for the given $idCustomer via ExecuteSQL

```
sql.whereEquals ( Customers::idCustomer ; Customers::state ; "NY" )
```
 - returns the ID of all customers in New York state

 
## REQUIRES
 - sql.col.delimiter custom function
 - sql.row.delimiter custom function
 - sql.getField custom function
 - sql.getTable

 
## CHANGELOG
### v1.1 2017-11-07 cristos@anchorbuoysoftware.com
 - Added performance profiling code.

### v1.0 2016-10-24 cristos@anchorbuoysoftware.com
 - Function created.

**/



Let (
[   ~fqFieldToReturn = fqFieldToReturn
;   ~fqFieldToMatch = fqFieldToMatch
;   ~valueToMatch = valueToMatch

;   ~sqlQuery= List
    (   "SELECT " & sql.getField ( ~fqFieldToReturn )
    ;   "FROM " & sql.getTable ( ~fqFieldToReturn )
    ;   "WHERE " & sql.getField ( ~fqFieldToMatch ) & " = ?" /* ~valueToMatch */
    )

;	~utcStart = Get ( CurrentTimeUTCMilliseconds )

;   ~sqlExec = ExecuteSQL
    (   ~sqlQuery
    ;   sql.col.delimiter ; sql.row.delimiter 
    ;   ~valueToMatch
    )

;	~utcStop = Get ( CurrentTimeUTCMilliseconds )

;	~elapsedMs = ~utcStop - ~utcStart

;	$$~sql.whereEquals__elapsedMs = ~elapsedMs

]
;   sql.debug ( ~sqlExec )
)